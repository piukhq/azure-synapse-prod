{
	"name": "df_Hermes to ADLS_history_historicalschemeaccount",
	"properties": {
		"description": "Copy history_historicalschemeaccount table from hermes",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_pg_hermes_history_historicalschemeaccount",
						"type": "DatasetReference"
					},
					"name": "SrcHistoryHistoricalSchemeAccount"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_adls_hermes_history_historicalschemeaccount",
						"type": "DatasetReference"
					},
					"name": "DstDataLake"
				}
			],
			"transformations": [
				{
					"name": "FilterRecords"
				}
			],
			"script": "source(output(\n\t\tid as integer,\n\t\tcreated as timestamp,\n\t\tchange_type as string,\n\t\tinstance_id as string,\n\t\tchannel as string,\n\t\tuser_id as integer,\n\t\tbody as string,\n\t\tchange_details as string,\n\t\tjourney as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tbatchSize: 10000,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SrcHistoryHistoricalSchemeAccount\nSrcHistoryHistoricalSchemeAccount filter(and(toDate(created) >= toDate(subDays(currentUTC(),1)), toDate(created) < toDate(currentUTC()))) ~> FilterRecords\nFilterRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DstDataLake"
		}
	}
}